<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" borderStyle="solid" minHeight="100"
	dataChange="dataChangeHandler(event)">
	
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.controls.List;
			import mx.core.IFlexDisplayObject;
			import mx.events.CloseEvent;
			import mx.containers.TitleWindow;
			import mx.managers.PopUpManager;
			import mx.collections.ArrayCollection;
			import mx.core.Application;
		
			[Bindable]
			private var linkButtonLabel:String = "";
			
			//this array is filled with Object with two attributes:
			//Object.parent - the SearchResponse
			//Object.newsresult - the NewsResult
			//you can do nifty things with thedata if you need to,
			//like using the parent to recall search results and such
			[Bindable]
			private var relatedSearches:ArrayCollection;
		
			private function dataChangeHandler(event:Event):void
			{
				var dict:Dictionary = Application.application.searchresults.urlHash;
				if (dict[data.Url] != undefined)
				{
					relatedSearches = dict[data.Url];
					
					//TODO: Some tweaks need to be made here so that the LinkButton
					//is not enabled when the only match is from the search itself,
					//since every search is also in the Hash, thus every item will
					//have a similar search, itself, which is confusing to the user.
					if (relatedSearches.length > 1)
					{
						linkButton.enabled = true;
						linkButtonLabel = relatedSearches.length +" other matches found";
					} else if (relatedSearches.length == 1)
					{
						linkButton.enabled = true;
						linkButtonLabel = "1 other match found";
					}
					else
					{
						linkButton.enabled = false;
						linkButtonLabel = "";
					}
				}
				else
				{
					linkButton.enabled = false;
					linkButtonLabel = "";
				}
			}
			
			/**
			 * This is the handler for when the similar search link button is clicked.
			 */
			private function linkButtonClickHandler(event:Event):void
			{
				//could do something else here, PopUpWindow seemed pretty natural
				//in the PopUp there is a List, which contains the similar articles
				var similarList:List = new List();
				similarList.dataProvider = relatedSearches;
				similarList.percentHeight = 100;
				similarList.percentWidth = 100;
				similarList.doubleClickEnabled = true;
				similarList.addEventListener(MouseEvent.DOUBLE_CLICK, similarSearchListClickHandler);
				similarList.itemRenderer = new ClassFactory(SimilarSearchItemRenderer);
				var tw:TitleWindow = new TitleWindow();
				tw.title = "Similar Searches";
				tw.showCloseButton = true;
				tw.addChild(similarList);
				tw.addEventListener(CloseEvent.CLOSE, removeSimilarSearchPopUp);
				PopUpManager.addPopUp(tw, this);
				PopUpManager.centerPopUp(tw);
			}
			
			/**
			 * Remove the PopUpWindow when the user clicks the X
			 */ 
			private function removeSimilarSearchPopUp(event:CloseEvent):void
			{
				PopUpManager.removePopUp(IFlexDisplayObject(event.currentTarget));
			}
			
			/**
			 * Handles the double click event when an item in the similar search
			 * list from linkButtonClickHandler(event) is executed.
			 */ 
			private function similarSearchListClickHandler(event:MouseEvent):void
			{
				//this could be another search with the old NewsResponse
				//or even open a webpage with the url so you can read the whole
				//article, or whatever
				trace("double clicked");
			}
		]]>
	</mx:Script>
	
	<mx:Text text="{data.Title}" selectable="false" width="100%" height="100%" truncateToFit="true" styleName="ArticleTitle"/>
	<mx:LinkButton id="linkButton" label="{linkButtonLabel}" click="linkButtonClickHandler(event)" styleName="SimilarSearchLinkButton"/>
	<mx:TextArea text="{data.Snippet}" selectable="false" editable="false" width="100%" height="100%" styleName="ArticleSnippet"/>
</mx:VBox>
